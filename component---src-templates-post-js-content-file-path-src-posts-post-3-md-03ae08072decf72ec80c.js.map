{"version":3,"file":"component---src-templates-post-js-content-file-path-src-posts-post-3-md-03ae08072decf72ec80c.js","mappings":"mKAuBA,IAlBeA,IAAmB,IAAlB,SAAEC,GAAUD,EACxB,OACIE,EAAAA,cAAA,OAAKC,UAAU,UACfD,EAAAA,cAAA,cACIA,EAAAA,cAAA,UACAA,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,KAAI,oBAIjBH,EAAAA,cAAA,YAAOD,GAEPC,EAAAA,cAAA,cACIA,EAAAA,cAAA,SAAG,MAAG,IAAII,MAAOC,cAAc,qB,4FCd3C,SAASC,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,OAAQ,WACPC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOhB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBQ,EAAYG,EAAG,KAAM,4DAA6D,KAAMX,EAAAA,cAAoBQ,EAAYI,GAAI,KAAM,KAAMZ,EAAAA,cAAoBQ,EAAYK,GAAI,KAAMb,EAAAA,cAAoBQ,EAAYM,OAAQ,KAAM,WAAY,4DAA6D,KAAMd,EAAAA,cAAoBQ,EAAYK,GAAI,KAAMb,EAAAA,cAAoBQ,EAAYM,OAAQ,KAAM,UAAW,gEAAiE,MAAO,KAAMd,EAAAA,cAAoBQ,EAAYG,EAAG,KAAM,0GAChlB,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOE,EAAYlB,EAAAA,cAAoBkB,EAAWX,EAAOP,EAAAA,cAAoBM,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCVO,MAWDY,EAAerB,IAAY,IAAX,KAACsB,GAAKtB,EAC1B,MAAM,YAACuB,EAAW,KAAEC,GAAQF,EAAKG,IACjC,OAAOvB,EAAAA,cAAoBwB,EAAAA,EAAQ,KAAMxB,EAAAA,cAAoB,UAAW,KAAMA,EAAAA,cAAoB,KAAM,KAAMqB,EAAYI,OAAQzB,EAAAA,cAAoB,IAAK,KAAMqB,EAAYK,MAAO1B,EAAAA,cAAoB2B,EAAAA,GAAa,KAAM3B,EAAAA,cAAoB,MAAO,KAAMsB,OAG/O,SAASM,EAAiBrB,GACvC,OAAOP,EAAAA,cAAoBmB,EAAcZ,EAAOP,EAAAA,cAAoB6B,EAAqBtB,GAC3F,C,8FCUO,MAAMuB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBf,GAC/B,MAAMgB,EAAoB,aAAiBF,GAG3C,OAAO,UAAc,IAEO,mBAAfd,EACFA,EAAWgB,GAGb,IAAIA,KAAsBhB,GAChC,CAACgB,EAAmBhB,GACzB,CAGA,MAAMiB,EAAc,CAAC,EAQd,SAASN,GAAY,WAACX,EAAU,SAAEjB,EAAQ,qBAAEmC,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAflB,EACHA,EAAW,CAAC,GACZA,GAAciB,EAEJF,EAAiBf,GAG5B,gBACLc,EAAWM,SACX,CAACC,MAAOF,GACRpC,EAEJ,C","sources":["webpack://angelica-reyes-memorylane/./src/components/Layout.js","webpack://angelica-reyes-memorylane/./src/posts/post-3.md","webpack://angelica-reyes-memorylane/./src/templates/post.js","webpack://angelica-reyes-memorylane/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./styles.css\" \n\n\nconst Layout = ({ children }) => {\n    return (\n        <div className=\"layout\">\n        <header>\n            <h1>\n            <Link to=\"/\">üìù Memory Lane</Link>\n            </h1>\n        </header>\n\n        <main>{children}</main>\n\n        <footer>\n            <p>¬© {new Date().getFullYear()} Angelica Reyes</p>\n        </footer>\n        </div>\n    )\n}\n\nexport default Layout\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Here are 3 tools that made my learning journey smoother:\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"VS Code\"), \" ‚Äì Lightweight, customizable, and packed with extensions\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"GitHub\"), \" ‚Äì I learned how to push commits and collaborate with others\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"These tools (along with good playlists) made long coding nights more productive and a little more fun.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/angelicareyes/Desktop/Deployment of Web Applications/Angelica_Reyes_MemoryLane/src/posts/post-3.md\";\nimport * as React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport {MDXProvider} from \"@mdx-js/react\";\nexport const query = graphql`\n    query ($id: String!) {\n        mdx(id: { eq: $id }) {\n            frontmatter {\n                title\n                date(formatString: \"MMMM D, YYYY\")\n            }\n            body\n        }\n    }\n`;\nconst PostTemplate = ({data}) => {\n  const {frontmatter, body} = data.mdx;\n  return React.createElement(Layout, null, React.createElement(\"article\", null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"p\", null, frontmatter.date), React.createElement(MDXProvider, null, React.createElement(\"div\", null, body))));\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_ref","children","React","className","Link","to","Date","getFullYear","_createMdxContent","props","_components","Object","assign","p","ol","li","strong","_provideComponents","components","wrapper","MDXLayout","PostTemplate","data","frontmatter","body","mdx","Layout","title","date","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}