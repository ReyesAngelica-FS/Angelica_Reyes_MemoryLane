{"version":3,"file":"component---src-pages-index-js-eccd305b37bcb7a47882.js","mappings":"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","sources":["webpack://angelica-reyes-dow-app/./src/components/AddProjectForm.js","webpack://angelica-reyes-dow-app/./src/components/Projects.js","webpack://angelica-reyes-dow-app/./src/pages/index.js"],"sourcesContent":["// src/components/AddProjectForm.js\nimport React, { useState } from \"react\";\n\nconst AddProjectForm = ({ onProjectAdded }) => {\n    const [form, setForm] = useState({\n        project_name: \"\",\n        yarn_type: \"\",\n        pattern_name: \"\",\n    });\n\n    const handleChange = (e) => {\n        setForm({ ...form, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n        const res = await fetch(\"http://localhost:5000/api/projects\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(form),\n        });\n\n        const newProject = await res.json();\n        onProjectAdded(newProject); // Notify parent to re-render\n        setForm({ project_name: \"\", yarn_type: \"\", pattern_name: \"\" });\n        } catch (err) {\n        console.error(\"Error adding project:\", err);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} style={{ marginBottom: \"2rem\" }}>\n        <h3>Add New Project</h3>\n        <input\n            name=\"project_name\"\n            placeholder=\"Project Name\"\n            value={form.project_name}\n            onChange={handleChange}\n            required\n            style={{ display: \"block\", marginBottom: \"0.5rem\" }}\n        />\n        <input\n            name=\"yarn_type\"\n            placeholder=\"Yarn Type\"\n            value={form.yarn_type}\n            onChange={handleChange}\n            required\n            style={{ display: \"block\", marginBottom: \"0.5rem\" }}\n        />\n        <input\n            name=\"pattern_name\"\n            placeholder=\"Pattern Name\"\n            value={form.pattern_name}\n            onChange={handleChange}\n            required\n            style={{ display: \"block\", marginBottom: \"0.5rem\" }}\n        />\n        <button type=\"submit\">âž• Add Project</button>\n        </form>\n    );\n};\n\nexport default AddProjectForm;\n","import React, { useEffect, useState } from \"react\";\nimport AddProjectForm from \"./AddProjectForm\";\n\nconst Projects = () => {\n    const [projects, setProjects] = useState([]);\n\n    const fetchProjects = async () => {\n        try {\n        const res = await fetch(\"http://localhost:5000/api/projects\");\n        const data = await res.json();\n        setProjects(data);\n        } catch (err) {\n        console.error(\"Error fetching projects:\", err);\n        }\n    };\n\n    useEffect(() => {\n        fetchProjects();\n    }, []);\n\n    const handleProjectAdded = (newProject) => {\n        setProjects([newProject, ...projects]);\n    };\n\n    return (\n        <div>\n        <AddProjectForm onProjectAdded={handleProjectAdded} />\n        {projects.length === 0 ? (\n            <p>No knitting projects yet.</p>\n        ) : (\n            <ul style={{ paddingLeft: 0 }}>\n            {projects.map((project) => (\n                <li key={project._id} style={{ marginBottom: \"1rem\", listStyle: \"none\" }}>\n                <strong>{project.project_name}</strong><br />\n                Yarn: {project.yarn_type} <br />\n                Pattern: {project.pattern_name} <br />\n                Created: {new Date(project.created_at).toLocaleDateString()}\n                </li>\n            ))}\n            </ul>\n        )}\n        </div>\n    );\n};\n\nexport default Projects;\n","// src/pages/index.js\nimport * as React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Projects from \"../components/Projects\";\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMdx.nodes;\n\n  return (\n    <main style={{ padding: \"2rem\", fontFamily: \"Arial, sans-serif\", maxWidth: \"800px\", margin: \"0 auto\" }}>\n      <h1>Welcome to Angelica's Blog ðŸš€</h1>\n      <p>This is my custom Gatsby site, created as part of my DOW assignment.</p>\n\n      <h2>ðŸ“š Latest Posts</h2>\n      <ul style={{ listStyle: \"none\", padding: 0 }}>\n        {posts.map(post => (\n          <li key={post.id} style={{ marginBottom: \"2rem\" }}>\n            <h3 style={{ marginBottom: \"0.3rem\" }}>\n              <Link to={`/posts${post.fields.slug}`} style={{ textDecoration: \"none\", color: \"#663399\" }}>\n                {post.frontmatter.title}\n              </Link>\n            </h3>\n            <p style={{ fontStyle: \"italic\", color: \"#555\" }}>{post.frontmatter.date}</p>\n          </li>\n        ))}\n      </ul>\n\n      <hr style={{ margin: \"3rem 0\" }} />\n\n      <h2>ðŸ§¶ Knitting Projects</h2>\n      <Projects />\n    </main>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMMM D, YYYY\")\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n\nexport const Head = () => <title>DOW App</title>;\n"],"names":["_ref","onProjectAdded","form","setForm","useState","project_name","yarn_type","pattern_name","handleChange","e","target","name","value","React","onSubmit","async","preventDefault","res","fetch","method","headers","body","JSON","stringify","newProject","json","err","console","error","style","marginBottom","placeholder","onChange","required","display","type","Projects","projects","setProjects","useEffect","data","fetchProjects","AddProjectForm","concat","_toConsumableArray","length","paddingLeft","map","project","key","_id","listStyle","Date","created_at","toLocaleDateString","posts","allMdx","nodes","padding","fontFamily","maxWidth","margin","post","id","Link","to","fields","slug","textDecoration","color","frontmatter","title","fontStyle","date","Head"],"sourceRoot":""}